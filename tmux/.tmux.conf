# 0 is too far from ` ;)
set -g base-index 1

set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set -g default-terminal tmux-256color
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi

set -g mouse on
bind -n WheelDownPane select-pane -t= \; send-keys -M

setw -g monitor-activity on
set -g focus-events on

set-option -g renumber-windows on

# toggle fullscreen
bind -n F11 run-shell "wmctrl -r :ACTIVE: -b toggle,fullscreen"

# copy & paste between tmux and x clipboard
bind-key -t vi-copy 'v' begin-selection
bind -t vi-copy V rectangle-toggle # toggle line and column selection
bind Escape copy-mode # prefix + Escape starts copy mode.
bind p paste-buffer # prefix + p pastes the latest buffer
# transfer copied text to attached terminal with yank:
# https://github.com/sunaku/home/blob/master/bin/yank
bind-key -t vi-copy y copy-pipe 'yank > #{pane_tty}'

# transfer copied text to attached terminal with yank:
# https://github.com/sunaku/home/blob/master/bin/yank
bind-key -n M-y run-shell "tmux save-buffer - | yank > #{pane_tty}"

# transfer previously copied text (chosen from a menu) to attached terminal:
# https://github.com/sunaku/home/blob/master/bin/yank
bind-key -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%\" - | yank > #{pane_tty}"'

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# open new panes on remote host
bind S run '/home/gb/bin/tmux-ssh split-window -v'
bind V run '/home/gb/bin/tmux-ssh split-window -h'

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# resize panes
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# switch windows
bind -n M-Right next-window
bind -n M-Left previous-window
bind -n M-1 select-window -t :=1
bind -n M-2 select-window -t :=2
bind -n M-3 select-window -t :=3
bind -n M-4 select-window -t :=4
bind -n M-5 select-window -t :=5
bind -n M-6 select-window -t :=6
bind -n M-7 select-window -t :=7
bind -n M-8 select-window -t :=8

# switch panes
bind -n C-Right select-pane -R
bind -n C-Left select-pane -L
bind -n C-Up select-pane -U
bind -n C-Down select-pane -D

# restore clear screen
bind C-l send-keys C-l

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf

# THEME
set -g window-style "bg=Colour0"
set -g window-active-style "bg=Colour8"
set -g status-bg black
set -g status-fg white
set -g window-status-current-bg white
set -g window-status-current-fg black
set -g window-status-current-attr bold
set -g window-status-activity-attr none
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=colour2](#S) '
set -g status-right '#[fg=colour2]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=colour7]%H:%M#[default]'
